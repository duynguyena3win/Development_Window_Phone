#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MusicGameService.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MusicGame_db")]
	public partial class MGDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMG_Score(MG_Score instance);
    partial void UpdateMG_Score(MG_Score instance);
    partial void DeleteMG_Score(MG_Score instance);
    partial void InsertMG_Question(MG_Question instance);
    partial void UpdateMG_Question(MG_Question instance);
    partial void DeleteMG_Question(MG_Question instance);
    partial void InsertMG_Challenge(MG_Challenge instance);
    partial void UpdateMG_Challenge(MG_Challenge instance);
    partial void DeleteMG_Challenge(MG_Challenge instance);
    partial void InsertMG_Artist(MG_Artist instance);
    partial void UpdateMG_Artist(MG_Artist instance);
    partial void DeleteMG_Artist(MG_Artist instance);
    partial void InsertMG_Song(MG_Song instance);
    partial void UpdateMG_Song(MG_Song instance);
    partial void DeleteMG_Song(MG_Song instance);
    partial void InsertMG_User(MG_User instance);
    partial void UpdateMG_User(MG_User instance);
    partial void DeleteMG_User(MG_User instance);
    #endregion
		
		public MGDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MusicGame_dbConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MGDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MGDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MGDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MGDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MG_Score> MG_Scores
		{
			get
			{
				return this.GetTable<MG_Score>();
			}
		}
		
		public System.Data.Linq.Table<MG_Question> MG_Questions
		{
			get
			{
				return this.GetTable<MG_Question>();
			}
		}
		
		public System.Data.Linq.Table<MG_Challenge> MG_Challenges
		{
			get
			{
				return this.GetTable<MG_Challenge>();
			}
		}
		
		public System.Data.Linq.Table<MG_Artist> MG_Artists
		{
			get
			{
				return this.GetTable<MG_Artist>();
			}
		}
		
		public System.Data.Linq.Table<MG_Song> MG_Songs
		{
			get
			{
				return this.GetTable<MG_Song>();
			}
		}
		
		public System.Data.Linq.Table<MG_User> MG_Users
		{
			get
			{
				return this.GetTable<MG_User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MG_Score")]
	public partial class MG_Score : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdScore;
		
		private int _IdUser;
		
		private System.Nullable<int> _Score;
		
		private System.Nullable<int> _Time;
		
		private EntityRef<MG_User> _MG_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdScoreChanging(int value);
    partial void OnIdScoreChanged();
    partial void OnIdUserChanging(int value);
    partial void OnIdUserChanged();
    partial void OnScoreChanging(System.Nullable<int> value);
    partial void OnScoreChanged();
    partial void OnTimeChanging(System.Nullable<int> value);
    partial void OnTimeChanged();
    #endregion
		
		public MG_Score()
		{
			this._MG_User = default(EntityRef<MG_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdScore", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdScore
		{
			get
			{
				return this._IdScore;
			}
			set
			{
				if ((this._IdScore != value))
				{
					this.OnIdScoreChanging(value);
					this.SendPropertyChanging();
					this._IdScore = value;
					this.SendPropertyChanged("IdScore");
					this.OnIdScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser", DbType="Int NOT NULL")]
		public int IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					if (this._MG_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUserChanging(value);
					this.SendPropertyChanging();
					this._IdUser = value;
					this.SendPropertyChanged("IdUser");
					this.OnIdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Int")]
		public System.Nullable<int> Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="Int")]
		public System.Nullable<int> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MG_User_MG_Score", Storage="_MG_User", ThisKey="IdUser", OtherKey="IdUser", IsForeignKey=true)]
		public MG_User MG_User
		{
			get
			{
				return this._MG_User.Entity;
			}
			set
			{
				MG_User previousValue = this._MG_User.Entity;
				if (((previousValue != value) 
							|| (this._MG_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MG_User.Entity = null;
						previousValue.MG_Scores.Remove(this);
					}
					this._MG_User.Entity = value;
					if ((value != null))
					{
						value.MG_Scores.Add(this);
						this._IdUser = value.IdUser;
					}
					else
					{
						this._IdUser = default(int);
					}
					this.SendPropertyChanged("MG_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MG_Question")]
	public partial class MG_Question : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdQuestion;
		
		private System.Nullable<int> _Type;
		
		private string _Source;
		
		private string _TextQuestion;
		
		private string _Description;
		
		private string _A;
		
		private string _B;
		
		private string _C;
		
		private string _D;
		
		private string _Answer;
		
		private string _Genre;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdQuestionChanging(int value);
    partial void OnIdQuestionChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnTextQuestionChanging(string value);
    partial void OnTextQuestionChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAChanging(string value);
    partial void OnAChanged();
    partial void OnBChanging(string value);
    partial void OnBChanged();
    partial void OnCChanging(string value);
    partial void OnCChanged();
    partial void OnDChanging(string value);
    partial void OnDChanged();
    partial void OnAnswerChanging(string value);
    partial void OnAnswerChanged();
    partial void OnGenreChanging(string value);
    partial void OnGenreChanged();
    #endregion
		
		public MG_Question()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdQuestion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdQuestion
		{
			get
			{
				return this._IdQuestion;
			}
			set
			{
				if ((this._IdQuestion != value))
				{
					this.OnIdQuestionChanging(value);
					this.SendPropertyChanging();
					this._IdQuestion = value;
					this.SendPropertyChanged("IdQuestion");
					this.OnIdQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="NVarChar(100)")]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextQuestion", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string TextQuestion
		{
			get
			{
				return this._TextQuestion;
			}
			set
			{
				if ((this._TextQuestion != value))
				{
					this.OnTextQuestionChanging(value);
					this.SendPropertyChanging();
					this._TextQuestion = value;
					this.SendPropertyChanged("TextQuestion");
					this.OnTextQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A", DbType="NVarChar(50)")]
		public string A
		{
			get
			{
				return this._A;
			}
			set
			{
				if ((this._A != value))
				{
					this.OnAChanging(value);
					this.SendPropertyChanging();
					this._A = value;
					this.SendPropertyChanged("A");
					this.OnAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B", DbType="NVarChar(50)")]
		public string B
		{
			get
			{
				return this._B;
			}
			set
			{
				if ((this._B != value))
				{
					this.OnBChanging(value);
					this.SendPropertyChanging();
					this._B = value;
					this.SendPropertyChanged("B");
					this.OnBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C", DbType="NVarChar(50)")]
		public string C
		{
			get
			{
				return this._C;
			}
			set
			{
				if ((this._C != value))
				{
					this.OnCChanging(value);
					this.SendPropertyChanging();
					this._C = value;
					this.SendPropertyChanged("C");
					this.OnCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D", DbType="NVarChar(50)")]
		public string D
		{
			get
			{
				return this._D;
			}
			set
			{
				if ((this._D != value))
				{
					this.OnDChanging(value);
					this.SendPropertyChanging();
					this._D = value;
					this.SendPropertyChanged("D");
					this.OnDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="NVarChar(50)")]
		public string Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this.OnAnswerChanging(value);
					this.SendPropertyChanging();
					this._Answer = value;
					this.SendPropertyChanged("Answer");
					this.OnAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Genre", DbType="NVarChar(30)")]
		public string Genre
		{
			get
			{
				return this._Genre;
			}
			set
			{
				if ((this._Genre != value))
				{
					this.OnGenreChanging(value);
					this.SendPropertyChanging();
					this._Genre = value;
					this.SendPropertyChanged("Genre");
					this.OnGenreChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MG_Challenge")]
	public partial class MG_Challenge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdChallenge;
		
		private string _IdFaceSend;
		
		private string _NameSend;
		
		private string _LinkFaceSend;
		
		private string _IdFaceReceive;
		
		private System.Nullable<int> _ScoreChallenge;
		
		private System.Nullable<int> _TimeChallenge;
		
		private System.Nullable<int> _IdUserReceive;
		
		private string _IdQuestion;
		
		private EntityRef<MG_User> _MG_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChallengeChanging(int value);
    partial void OnIdChallengeChanged();
    partial void OnIdFaceSendChanging(string value);
    partial void OnIdFaceSendChanged();
    partial void OnNameSendChanging(string value);
    partial void OnNameSendChanged();
    partial void OnLinkFaceSendChanging(string value);
    partial void OnLinkFaceSendChanged();
    partial void OnIdFaceReceiveChanging(string value);
    partial void OnIdFaceReceiveChanged();
    partial void OnScoreChallengeChanging(System.Nullable<int> value);
    partial void OnScoreChallengeChanged();
    partial void OnTimeChallengeChanging(System.Nullable<int> value);
    partial void OnTimeChallengeChanged();
    partial void OnIdUserReceiveChanging(System.Nullable<int> value);
    partial void OnIdUserReceiveChanged();
    partial void OnIdQuestionChanging(string value);
    partial void OnIdQuestionChanged();
    #endregion
		
		public MG_Challenge()
		{
			this._MG_User = default(EntityRef<MG_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdChallenge", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdChallenge
		{
			get
			{
				return this._IdChallenge;
			}
			set
			{
				if ((this._IdChallenge != value))
				{
					this.OnIdChallengeChanging(value);
					this.SendPropertyChanging();
					this._IdChallenge = value;
					this.SendPropertyChanged("IdChallenge");
					this.OnIdChallengeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFaceSend", DbType="NVarChar(150)")]
		public string IdFaceSend
		{
			get
			{
				return this._IdFaceSend;
			}
			set
			{
				if ((this._IdFaceSend != value))
				{
					this.OnIdFaceSendChanging(value);
					this.SendPropertyChanging();
					this._IdFaceSend = value;
					this.SendPropertyChanged("IdFaceSend");
					this.OnIdFaceSendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameSend", DbType="NVarChar(150)")]
		public string NameSend
		{
			get
			{
				return this._NameSend;
			}
			set
			{
				if ((this._NameSend != value))
				{
					this.OnNameSendChanging(value);
					this.SendPropertyChanging();
					this._NameSend = value;
					this.SendPropertyChanged("NameSend");
					this.OnNameSendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkFaceSend", DbType="NVarChar(200)")]
		public string LinkFaceSend
		{
			get
			{
				return this._LinkFaceSend;
			}
			set
			{
				if ((this._LinkFaceSend != value))
				{
					this.OnLinkFaceSendChanging(value);
					this.SendPropertyChanging();
					this._LinkFaceSend = value;
					this.SendPropertyChanged("LinkFaceSend");
					this.OnLinkFaceSendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFaceReceive", DbType="NVarChar(150)")]
		public string IdFaceReceive
		{
			get
			{
				return this._IdFaceReceive;
			}
			set
			{
				if ((this._IdFaceReceive != value))
				{
					this.OnIdFaceReceiveChanging(value);
					this.SendPropertyChanging();
					this._IdFaceReceive = value;
					this.SendPropertyChanged("IdFaceReceive");
					this.OnIdFaceReceiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreChallenge", DbType="Int")]
		public System.Nullable<int> ScoreChallenge
		{
			get
			{
				return this._ScoreChallenge;
			}
			set
			{
				if ((this._ScoreChallenge != value))
				{
					this.OnScoreChallengeChanging(value);
					this.SendPropertyChanging();
					this._ScoreChallenge = value;
					this.SendPropertyChanged("ScoreChallenge");
					this.OnScoreChallengeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeChallenge", DbType="Int")]
		public System.Nullable<int> TimeChallenge
		{
			get
			{
				return this._TimeChallenge;
			}
			set
			{
				if ((this._TimeChallenge != value))
				{
					this.OnTimeChallengeChanging(value);
					this.SendPropertyChanging();
					this._TimeChallenge = value;
					this.SendPropertyChanged("TimeChallenge");
					this.OnTimeChallengeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUserReceive", DbType="Int")]
		public System.Nullable<int> IdUserReceive
		{
			get
			{
				return this._IdUserReceive;
			}
			set
			{
				if ((this._IdUserReceive != value))
				{
					if (this._MG_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUserReceiveChanging(value);
					this.SendPropertyChanging();
					this._IdUserReceive = value;
					this.SendPropertyChanged("IdUserReceive");
					this.OnIdUserReceiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdQuestion", DbType="NVarChar(100)")]
		public string IdQuestion
		{
			get
			{
				return this._IdQuestion;
			}
			set
			{
				if ((this._IdQuestion != value))
				{
					this.OnIdQuestionChanging(value);
					this.SendPropertyChanging();
					this._IdQuestion = value;
					this.SendPropertyChanged("IdQuestion");
					this.OnIdQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MG_User_MG_Challenge", Storage="_MG_User", ThisKey="IdUserReceive", OtherKey="IdUser", IsForeignKey=true)]
		public MG_User MG_User
		{
			get
			{
				return this._MG_User.Entity;
			}
			set
			{
				MG_User previousValue = this._MG_User.Entity;
				if (((previousValue != value) 
							|| (this._MG_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MG_User.Entity = null;
						previousValue.MG_Challenges.Remove(this);
					}
					this._MG_User.Entity = value;
					if ((value != null))
					{
						value.MG_Challenges.Add(this);
						this._IdUserReceive = value.IdUser;
					}
					else
					{
						this._IdUserReceive = default(Nullable<int>);
					}
					this.SendPropertyChanged("MG_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MG_Artist")]
	public partial class MG_Artist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdArtist;
		
		private string _NameArtist;
		
		private string _Nation;
		
		private EntitySet<MG_Song> _MG_Songs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdArtistChanging(int value);
    partial void OnIdArtistChanged();
    partial void OnNameArtistChanging(string value);
    partial void OnNameArtistChanged();
    partial void OnNationChanging(string value);
    partial void OnNationChanged();
    #endregion
		
		public MG_Artist()
		{
			this._MG_Songs = new EntitySet<MG_Song>(new Action<MG_Song>(this.attach_MG_Songs), new Action<MG_Song>(this.detach_MG_Songs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdArtist", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdArtist
		{
			get
			{
				return this._IdArtist;
			}
			set
			{
				if ((this._IdArtist != value))
				{
					this.OnIdArtistChanging(value);
					this.SendPropertyChanging();
					this._IdArtist = value;
					this.SendPropertyChanged("IdArtist");
					this.OnIdArtistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameArtist", DbType="NVarChar(50)")]
		public string NameArtist
		{
			get
			{
				return this._NameArtist;
			}
			set
			{
				if ((this._NameArtist != value))
				{
					this.OnNameArtistChanging(value);
					this.SendPropertyChanging();
					this._NameArtist = value;
					this.SendPropertyChanged("NameArtist");
					this.OnNameArtistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nation", DbType="NVarChar(50)")]
		public string Nation
		{
			get
			{
				return this._Nation;
			}
			set
			{
				if ((this._Nation != value))
				{
					this.OnNationChanging(value);
					this.SendPropertyChanging();
					this._Nation = value;
					this.SendPropertyChanged("Nation");
					this.OnNationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MG_Artist_MG_Song", Storage="_MG_Songs", ThisKey="IdArtist", OtherKey="IdArtist")]
		public EntitySet<MG_Song> MG_Songs
		{
			get
			{
				return this._MG_Songs;
			}
			set
			{
				this._MG_Songs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MG_Songs(MG_Song entity)
		{
			this.SendPropertyChanging();
			entity.MG_Artist = this;
		}
		
		private void detach_MG_Songs(MG_Song entity)
		{
			this.SendPropertyChanging();
			entity.MG_Artist = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MG_Song")]
	public partial class MG_Song : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdSong;
		
		private int _IdArtist;
		
		private string _NameSong;
		
		private string _Genre;
		
		private EntityRef<MG_Artist> _MG_Artist;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSongChanging(int value);
    partial void OnIdSongChanged();
    partial void OnIdArtistChanging(int value);
    partial void OnIdArtistChanged();
    partial void OnNameSongChanging(string value);
    partial void OnNameSongChanged();
    partial void OnGenreChanging(string value);
    partial void OnGenreChanged();
    #endregion
		
		public MG_Song()
		{
			this._MG_Artist = default(EntityRef<MG_Artist>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSong", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdSong
		{
			get
			{
				return this._IdSong;
			}
			set
			{
				if ((this._IdSong != value))
				{
					this.OnIdSongChanging(value);
					this.SendPropertyChanging();
					this._IdSong = value;
					this.SendPropertyChanged("IdSong");
					this.OnIdSongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdArtist", DbType="Int NOT NULL")]
		public int IdArtist
		{
			get
			{
				return this._IdArtist;
			}
			set
			{
				if ((this._IdArtist != value))
				{
					if (this._MG_Artist.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdArtistChanging(value);
					this.SendPropertyChanging();
					this._IdArtist = value;
					this.SendPropertyChanged("IdArtist");
					this.OnIdArtistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameSong", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NameSong
		{
			get
			{
				return this._NameSong;
			}
			set
			{
				if ((this._NameSong != value))
				{
					this.OnNameSongChanging(value);
					this.SendPropertyChanging();
					this._NameSong = value;
					this.SendPropertyChanged("NameSong");
					this.OnNameSongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Genre", DbType="NVarChar(50)")]
		public string Genre
		{
			get
			{
				return this._Genre;
			}
			set
			{
				if ((this._Genre != value))
				{
					this.OnGenreChanging(value);
					this.SendPropertyChanging();
					this._Genre = value;
					this.SendPropertyChanged("Genre");
					this.OnGenreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MG_Artist_MG_Song", Storage="_MG_Artist", ThisKey="IdArtist", OtherKey="IdArtist", IsForeignKey=true)]
		public MG_Artist MG_Artist
		{
			get
			{
				return this._MG_Artist.Entity;
			}
			set
			{
				MG_Artist previousValue = this._MG_Artist.Entity;
				if (((previousValue != value) 
							|| (this._MG_Artist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MG_Artist.Entity = null;
						previousValue.MG_Songs.Remove(this);
					}
					this._MG_Artist.Entity = value;
					if ((value != null))
					{
						value.MG_Songs.Add(this);
						this._IdArtist = value.IdArtist;
					}
					else
					{
						this._IdArtist = default(int);
					}
					this.SendPropertyChanged("MG_Artist");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MG_User")]
	public partial class MG_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdUser;
		
		private string _IdFacebook;
		
		private string _Name;
		
		private System.Nullable<double> _AverageScore;
		
		private string _LinkFacebook;
		
		private string _UserImage;
		
		private System.Nullable<int> _Win;
		
		private System.Nullable<int> _Lose;
		
		private string _AccessToken;
		
		private EntitySet<MG_Challenge> _MG_Challenges;
		
		private EntitySet<MG_Score> _MG_Scores;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdUserChanging(int value);
    partial void OnIdUserChanged();
    partial void OnIdFacebookChanging(string value);
    partial void OnIdFacebookChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAverageScoreChanging(System.Nullable<double> value);
    partial void OnAverageScoreChanged();
    partial void OnLinkFacebookChanging(string value);
    partial void OnLinkFacebookChanged();
    partial void OnUserImageChanging(string value);
    partial void OnUserImageChanged();
    partial void OnWinChanging(System.Nullable<int> value);
    partial void OnWinChanged();
    partial void OnLoseChanging(System.Nullable<int> value);
    partial void OnLoseChanged();
    partial void OnAccessTokenChanging(string value);
    partial void OnAccessTokenChanged();
    #endregion
		
		public MG_User()
		{
			this._MG_Challenges = new EntitySet<MG_Challenge>(new Action<MG_Challenge>(this.attach_MG_Challenges), new Action<MG_Challenge>(this.detach_MG_Challenges));
			this._MG_Scores = new EntitySet<MG_Score>(new Action<MG_Score>(this.attach_MG_Scores), new Action<MG_Score>(this.detach_MG_Scores));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					this.OnIdUserChanging(value);
					this.SendPropertyChanging();
					this._IdUser = value;
					this.SendPropertyChanged("IdUser");
					this.OnIdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFacebook", DbType="NVarChar(100)")]
		public string IdFacebook
		{
			get
			{
				return this._IdFacebook;
			}
			set
			{
				if ((this._IdFacebook != value))
				{
					this.OnIdFacebookChanging(value);
					this.SendPropertyChanging();
					this._IdFacebook = value;
					this.SendPropertyChanged("IdFacebook");
					this.OnIdFacebookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AverageScore", DbType="Float")]
		public System.Nullable<double> AverageScore
		{
			get
			{
				return this._AverageScore;
			}
			set
			{
				if ((this._AverageScore != value))
				{
					this.OnAverageScoreChanging(value);
					this.SendPropertyChanging();
					this._AverageScore = value;
					this.SendPropertyChanged("AverageScore");
					this.OnAverageScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkFacebook", DbType="NVarChar(200)")]
		public string LinkFacebook
		{
			get
			{
				return this._LinkFacebook;
			}
			set
			{
				if ((this._LinkFacebook != value))
				{
					this.OnLinkFacebookChanging(value);
					this.SendPropertyChanging();
					this._LinkFacebook = value;
					this.SendPropertyChanged("LinkFacebook");
					this.OnLinkFacebookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserImage", DbType="NVarChar(150)")]
		public string UserImage
		{
			get
			{
				return this._UserImage;
			}
			set
			{
				if ((this._UserImage != value))
				{
					this.OnUserImageChanging(value);
					this.SendPropertyChanging();
					this._UserImage = value;
					this.SendPropertyChanged("UserImage");
					this.OnUserImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Win", DbType="Int")]
		public System.Nullable<int> Win
		{
			get
			{
				return this._Win;
			}
			set
			{
				if ((this._Win != value))
				{
					this.OnWinChanging(value);
					this.SendPropertyChanging();
					this._Win = value;
					this.SendPropertyChanged("Win");
					this.OnWinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lose", DbType="Int")]
		public System.Nullable<int> Lose
		{
			get
			{
				return this._Lose;
			}
			set
			{
				if ((this._Lose != value))
				{
					this.OnLoseChanging(value);
					this.SendPropertyChanging();
					this._Lose = value;
					this.SendPropertyChanged("Lose");
					this.OnLoseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessToken", DbType="NVarChar(150)")]
		public string AccessToken
		{
			get
			{
				return this._AccessToken;
			}
			set
			{
				if ((this._AccessToken != value))
				{
					this.OnAccessTokenChanging(value);
					this.SendPropertyChanging();
					this._AccessToken = value;
					this.SendPropertyChanged("AccessToken");
					this.OnAccessTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MG_User_MG_Challenge", Storage="_MG_Challenges", ThisKey="IdUser", OtherKey="IdUserReceive")]
		public EntitySet<MG_Challenge> MG_Challenges
		{
			get
			{
				return this._MG_Challenges;
			}
			set
			{
				this._MG_Challenges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MG_User_MG_Score", Storage="_MG_Scores", ThisKey="IdUser", OtherKey="IdUser")]
		public EntitySet<MG_Score> MG_Scores
		{
			get
			{
				return this._MG_Scores;
			}
			set
			{
				this._MG_Scores.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MG_Challenges(MG_Challenge entity)
		{
			this.SendPropertyChanging();
			entity.MG_User = this;
		}
		
		private void detach_MG_Challenges(MG_Challenge entity)
		{
			this.SendPropertyChanging();
			entity.MG_User = null;
		}
		
		private void attach_MG_Scores(MG_Score entity)
		{
			this.SendPropertyChanging();
			entity.MG_User = this;
		}
		
		private void detach_MG_Scores(MG_Score entity)
		{
			this.SendPropertyChanging();
			entity.MG_User = null;
		}
	}
}
#pragma warning restore 1591
